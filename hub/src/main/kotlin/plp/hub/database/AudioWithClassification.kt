package plp.hub.database

import kotlinx.serialization.Serializable
import plp.data.SelectAllAudio

/**
 * @see SelectAllAudio
 * This class was created manually.
 * It duplicates the one generated by SQLDelight, but it's Serializable.
 * This was needed because the auto-generated one isn't serializable
 * (even using the deriving method documented here: https://github.com/Kotlin/kotlinx.serialization/blob/master/docs/serializers.md#deriving-external-serializer-for-another-kotlin-class-experimental )
 * and this (unfortunately) seemed like the quickest way to get a serializable version of it.
 */
@Serializable
@Suppress("ConstructorParameterNaming")
data class AudioWithClassification(
    val audio_id: Long,
    val transcript_id: Long?,
    val classification_id: Long?,
    val filename: String,
    val timestamp: Long,
    val duration: Double,
    val audio_id_: Long?,
    val filename_: String?,
    val timestamp_: Double?,
    val duration_: Double?,
    val text: String?,
    val transcript_id_: Long?,
    val classifier: String?,
    val classification: String?,
    val confidence: Double?,
    val extras: String?
) {
    override fun toString(): String =
        """
  |AudioWithClassification [
  |  audio_id: $audio_id
  |  transcript_id: $transcript_id
  |  classification_id: $classification_id
  |  filename: $filename
  |  timestamp: $timestamp
  |  duration: $duration
  |  audio_id_: $audio_id_
  |  filename_: $filename_
  |  timestamp_: $timestamp_
  |  duration_: $duration_
  |  text: $text
  |  transcript_id_: $transcript_id_
  |  classifier: $classifier
  |  classification: $classification
  |  confidence: $confidence
  |  extras: $extras
  |]
  """.trimMargin()
}

fun SelectAllAudio.toSerializable() = AudioWithClassification(
    audio_id = audio_id,
    transcript_id = transcript_id,
    classification_id = classification_id,
    filename = filename,
    timestamp = timestamp,
    duration = duration,
    audio_id_ = audio_id_,
    filename_ = filename_,
    timestamp_ = timestamp_,
    duration_ = duration_,
    text = text,
    transcript_id_ = transcript_id_,
    classifier = classifier,
    classification = classification,
    confidence = confidence,
    extras = extras
)
